# For loop
# allows you to run code over and over again
# iterable is something that can be looped over

# in - is also a keyword

for item in 'Zero to Mastery':
    print(item) # will print every letter in zero to mastery on separate line

#  works for lists, sets, tuples
for item in [1,2,3,4,5]:
    print(item) # will print all the numbers 
print(item) # 5 will still print as item is a variable and still holds the value so not block based

# can nest for loops as well
for item in (1,2,3,4,5):
    for x in ['a', 'b', 'c']:
      print(item, x)


# ITERABLES
# list, dictionary, tuple, set, string...a collection of items 
# iterated - can go one by one to check each item in a collection

user = {
    'name': 'Golem',
    'age': 5000,
    'can_swim': False
}

for item in user: 
    print(item) # will get the keys only

for item in user.items(): 
    print(item) # will get the key value pair in a tuple

for item in user.values(): 
    print(item) # will get the values only

for item in user.keys(): 
    print(item) # will get the keys only

for key, value in user.items(): 
    print(key, value) # will get them separated into their variables, don't have to be key and value, can be whatever you want to call them.


#for item in 50: 
 #   print(item) # will give an error as a number is not iterable


# EXERCISE - Counter - use a list to total what is in my_list

my_list = [1,2,3,4,5,6,7,8,9,10]
counter = 0

for num in my_list:
    counter += num
print(counter)


# RANGE - creates a special kind of object that we can iterate over

print(range(100)) # range(0, 100)

for num in range(0, 10):
    print(num) # will print out from 0 to 9

# if you don't need a variable convention is to use an underscore
for _ in range(0, 10):
    print('sending email') # will print out from 0 to 9

# range has a third parameter that is a stepover

for num in range(0, 10, 2):
    print(num) # 0, 2, 4, 6, 8

# this allows you to go in reverse. You can't do range(10, 0) as it will do nothing and you can't do range(0, 10, -1) as it will also do nothing.
for num in range(10, 0, -1):
    print(num) # 10, 9, 8, 7, 6, 5, 4, 3, 2, 1

# range can be used to quickly build a list of numbers
for num in range(2):
    print(list(range(10))) # will get a list of [0,1,2,3,4,5,6,7,8,9,10] twice can also use with start, stop, stepover in this case too 


# ENUMERATE
# gives the index (says it's the count but starts at 0 which is the index) and character.
# so this is useful if you need the index number for any reason

for i, char in enumerate('Hello'):
    print(i, char)

for i, char in enumerate(list(range(100))):
    if char == 50:
        print(f'index of 50 is: {i}')

 
        